
import { 
  InsurancePolicy, User, Payment, Claim, AdminUser, 
  Notification, ChatMessage, DashboardStats 
} from '../models/types';

// Generate mock users
export const mockUsers: User[] = [
  {
    id: 'user1',
    name: 'John Doe',
    email: 'john@example.com',
    phone: '+254712345678',
    createdAt: new Date('2023-10-15'),
    address: 'Nairobi, Kenya',
    profileImage: 'https://randomuser.me/api/portraits/men/1.jpg',
  },
  {
    id: 'user2',
    name: 'Jane Smith',
    email: 'jane@example.com',
    phone: '+254723456789',
    createdAt: new Date('2023-11-02'),
    address: 'Mombasa, Kenya',
  },
  {
    id: 'user3',
    name: 'Mike Johnson',
    email: 'mike@example.com',
    phone: '+254734567890',
    createdAt: new Date('2023-12-20'),
    profileImage: 'https://randomuser.me/api/portraits/men/2.jpg',
  },
  {
    id: 'user4',
    name: 'Sarah Kimani',
    email: 'sarah@example.com',
    phone: '+254745678901',
    createdAt: new Date('2024-01-10'),
    address: 'Nakuru, Kenya',
  },
  {
    id: 'user5',
    name: 'David Odhiambo',
    email: 'david@example.com',
    phone: '+254756789012',
    createdAt: new Date('2024-02-15'),
    profileImage: 'https://randomuser.me/api/portraits/men/3.jpg',
  },
];

// Generate mock insurance policies
export const mockPolicies: InsurancePolicy[] = [
  {
    id: 'policy1',
    userId: 'user1',
    itemName: 'iPhone 14 Pro',
    itemDescription: 'Apple iPhone 14 Pro 256GB Sierra Blue',
    category: 'electronics',
    purchaseDate: new Date('2023-09-01'),
    purchasePrice: 150000,
    coverageAmount: 120000,
    premium: 12000,
    startDate: new Date('2023-10-01'),
    endDate: new Date('2024-10-01'),
    status: 'active',
    itemImages: ['/images/iphone.jpg'],
    documents: ['/documents/receipt.pdf'],
    createdAt: new Date('2023-10-01'),
    updatedAt: new Date('2023-10-01'),
  },
  {
    id: 'policy2',
    userId: 'user1',
    itemName: 'MacBook Pro',
    itemDescription: 'Apple MacBook Pro 16" M2 Pro Chip',
    category: 'electronics',
    purchaseDate: new Date('2023-07-15'),
    purchasePrice: 250000,
    coverageAmount: 200000,
    premium: 20000,
    startDate: new Date('2023-08-01'),
    endDate: new Date('2024-08-01'),
    status: 'active',
    itemImages: ['/images/macbook.jpg'],
    documents: ['/documents/receipt.pdf'],
    createdAt: new Date('2023-08-01'),
    updatedAt: new Date('2023-08-01'),
  },
  {
    id: 'policy3',
    userId: 'user2',
    itemName: 'Samsung 65" QLED TV',
    itemDescription: 'Samsung 65" QLED 4K Smart TV',
    category: 'household',
    purchaseDate: new Date('2023-11-10'),
    purchasePrice: 120000,
    coverageAmount: 100000,
    premium: 10000,
    startDate: new Date('2023-12-01'),
    endDate: new Date('2024-12-01'),
    status: 'active',
    itemImages: ['/images/tv.jpg'],
    documents: ['/documents/receipt.pdf'],
    createdAt: new Date('2023-12-01'),
    updatedAt: new Date('2023-12-01'),
  },
  {
    id: 'policy4',
    userId: 'user3',
    itemName: 'Bosch Washing Machine',
    itemDescription: 'Bosch 9kg Front Load Washing Machine',
    category: 'household',
    purchaseDate: new Date('2023-10-05'),
    purchasePrice: 85000,
    coverageAmount: 70000,
    premium: 7000,
    startDate: new Date('2023-11-01'),
    endDate: new Date('2024-11-01'),
    status: 'active',
    itemImages: ['/images/washing-machine.jpg'],
    documents: ['/documents/receipt.pdf'],
    createdAt: new Date('2023-11-01'),
    updatedAt: new Date('2023-11-01'),
  },
  {
    id: 'policy5',
    userId: 'user4',
    itemName: 'Canon EOS R6',
    itemDescription: 'Canon EOS R6 Mirrorless Camera with 24-105mm Lens',
    category: 'electronics',
    purchaseDate: new Date('2023-12-15'),
    purchasePrice: 280000,
    coverageAmount: 250000,
    premium: 25000,
    startDate: new Date('2024-01-01'),
    endDate: new Date('2025-01-01'),
    status: 'active',
    itemImages: ['/images/camera.jpg'],
    documents: ['/documents/receipt.pdf'],
    createdAt: new Date('2024-01-01'),
    updatedAt: new Date('2024-01-01'),
  },
  {
    id: 'policy6',
    userId: 'user5',
    itemName: 'Sony PlayStation 5',
    itemDescription: 'Sony PlayStation 5 Digital Edition',
    category: 'electronics',
    purchaseDate: new Date('2023-11-20'),
    purchasePrice: 65000,
    coverageAmount: 50000,
    premium: 5000,
    startDate: new Date('2023-12-01'),
    endDate: new Date('2024-12-01'),
    status: 'active',
    itemImages: ['/images/ps5.jpg'],
    documents: ['/documents/receipt.pdf'],
    createdAt: new Date('2023-12-01'),
    updatedAt: new Date('2023-12-01'),
  },
  {
    id: 'policy7',
    userId: 'user2',
    itemName: 'Engagement Ring',
    itemDescription: '1.5ct Diamond Engagement Ring, Platinum Setting',
    category: 'personal',
    purchaseDate: new Date('2023-09-20'),
    purchasePrice: 350000,
    coverageAmount: 300000,
    premium: 30000,
    startDate: new Date('2023-10-01'),
    endDate: new Date('2024-10-01'),
    status: 'active',
    itemImages: ['/images/ring.jpg'],
    documents: ['/documents/receipt.pdf', '/documents/valuation.pdf'],
    createdAt: new Date('2023-10-01'),
    updatedAt: new Date('2023-10-01'),
  },
  {
    id: 'policy8',
    userId: 'user3',
    itemName: 'DJI Mavic 3 Drone',
    itemDescription: 'DJI Mavic 3 Fly More Combo',
    category: 'electronics',
    purchaseDate: new Date('2024-01-10'),
    purchasePrice: 180000,
    coverageAmount: 150000,
    premium: 15000,
    startDate: new Date('2024-02-01'),
    endDate: new Date('2025-02-01'),
    status: 'pending',
    itemImages: ['/images/drone.jpg'],
    documents: ['/documents/receipt.pdf'],
    createdAt: new Date('2024-02-01'),
    updatedAt: new Date('2024-02-01'),
  },
];

// Generate mock payments
export const mockPayments: Payment[] = [
  {
    id: 'payment1',
    policyId: 'policy1',
    userId: 'user1',
    amount: 12000,
    method: 'mpesa',
    status: 'paid',
    transactionId: 'MPESA123456',
    createdAt: new Date('2023-10-01'),
    receipt: '/receipts/payment1.pdf',
  },
  {
    id: 'payment2',
    policyId: 'policy2',
    userId: 'user1',
    amount: 20000,
    method: 'mpesa',
    status: 'paid',
    transactionId: 'MPESA123457',
    createdAt: new Date('2023-08-01'),
    receipt: '/receipts/payment2.pdf',
  },
  {
    id: 'payment3',
    policyId: 'policy3',
    userId: 'user2',
    amount: 10000,
    method: 'card',
    status: 'paid',
    transactionId: 'CARD123456',
    createdAt: new Date('2023-12-01'),
    receipt: '/receipts/payment3.pdf',
  },
  {
    id: 'payment4',
    policyId: 'policy4',
    userId: 'user3',
    amount: 7000,
    method: 'mpesa',
    status: 'paid',
    transactionId: 'MPESA123458',
    createdAt: new Date('2023-11-01'),
    receipt: '/receipts/payment4.pdf',
  },
  {
    id: 'payment5',
    policyId: 'policy5',
    userId: 'user4',
    amount: 25000,
    method: 'bank',
    status: 'paid',
    transactionId: 'BANK123456',
    createdAt: new Date('2024-01-01'),
    receipt: '/receipts/payment5.pdf',
  },
  {
    id: 'payment6',
    policyId: 'policy6',
    userId: 'user5',
    amount: 5000,
    method: 'mpesa',
    status: 'paid',
    transactionId: 'MPESA123459',
    createdAt: new Date('2023-12-01'),
    receipt: '/receipts/payment6.pdf',
  },
  {
    id: 'payment7',
    policyId: 'policy7',
    userId: 'user2',
    amount: 30000,
    method: 'card',
    status: 'paid',
    transactionId: 'CARD123457',
    createdAt: new Date('2023-10-01'),
    receipt: '/receipts/payment7.pdf',
  },
  {
    id: 'payment8',
    policyId: 'policy8',
    userId: 'user3',
    amount: 15000,
    method: 'mpesa',
    status: 'pending',
    createdAt: new Date('2024-02-01'),
  },
];

// Generate mock claims
export const mockClaims: Claim[] = [
  {
    id: 'claim1',
    policyId: 'policy1',
    userId: 'user1',
    description: 'Phone screen cracked after accidental drop',
    incidentDate: new Date('2024-03-15'),
    claimAmount: 25000,
    status: 'pending',
    evidence: ['/images/claim1-evidence1.jpg', '/images/claim1-evidence2.jpg'],
    createdAt: new Date('2024-03-16'),
    updatedAt: new Date('2024-03-16'),
  },
  {
    id: 'claim2',
    policyId: 'policy3',
    userId: 'user2',
    description: 'TV damaged during power surge',
    incidentDate: new Date('2024-02-20'),
    claimAmount: 80000,
    status: 'reviewing',
    evidence: ['/images/claim2-evidence1.jpg', '/images/claim2-evidence2.jpg'],
    reviewNotes: 'Assessing power surge damage reports',
    createdAt: new Date('2024-02-21'),
    updatedAt: new Date('2024-03-01'),
  },
  {
    id: 'claim3',
    policyId: 'policy4',
    userId: 'user3',
    description: 'Washing machine motor failure',
    incidentDate: new Date('2024-01-10'),
    claimAmount: 35000,
    status: 'approved',
    evidence: ['/images/claim3-evidence1.jpg', '/images/claim3-evidence2.jpg'],
    reviewNotes: 'Repair estimate verified. Approved for payment.',
    createdAt: new Date('2024-01-11'),
    updatedAt: new Date('2024-01-25'),
  },
  {
    id: 'claim4',
    policyId: 'policy7',
    userId: 'user2',
    description: 'Diamond ring stolen during break-in',
    incidentDate: new Date('2024-02-05'),
    claimAmount: 300000,
    status: 'reviewing',
    evidence: [
      '/images/claim4-evidence1.jpg',
      '/documents/police-report.pdf',
      '/documents/ring-valuation.pdf'
    ],
    reviewNotes: 'Police report verified. Awaiting additional documentation.',
    createdAt: new Date('2024-02-06'),
    updatedAt: new Date('2024-02-15'),
  },
];

// Generate mock admin users
export const mockAdmins: AdminUser[] = [
  {
    id: 'admin1',
    name: 'Admin User',
    email: 'admin@insuremojo.com',
    role: 'admin',
    createdAt: new Date('2023-01-01'),
  },
  {
    id: 'admin2',
    name: 'Jane Underwriter',
    email: 'underwriter@insuremojo.com',
    role: 'underwriter',
    createdAt: new Date('2023-01-10'),
  },
  {
    id: 'admin3',
    name: 'Support Staff',
    email: 'support@insuremojo.com',
    role: 'support',
    createdAt: new Date('2023-01-15'),
  },
  {
    id: 'admin4',
    name: 'Manager User',
    email: 'manager@insuremojo.com',
    role: 'manager',
    createdAt: new Date('2023-01-05'),
  },
];

// Generate mock notifications
export const mockNotifications: Notification[] = [
  {
    id: 'notif1',
    userId: 'user1',
    type: 'claim_update',
    title: 'Claim Status Updated',
    message: 'Your claim for iPhone 14 Pro has been received and is under review.',
    isRead: false,
    createdAt: new Date('2024-03-16'),
  },
  {
    id: 'notif2',
    userId: 'user2',
    type: 'policy_expiry',
    title: 'Policy Expiring Soon',
    message: 'Your insurance policy for Samsung 65" QLED TV will expire in 30 days.',
    isRead: true,
    createdAt: new Date('2024-03-01'),
  },
  {
    id: 'notif3',
    userId: 'user3',
    type: 'claim_update',
    title: 'Claim Approved',
    message: 'Your claim for washing machine repair has been approved. Payment will be processed within 3-5 business days.',
    isRead: false,
    createdAt: new Date('2024-01-25'),
  },
  {
    id: 'notif4',
    userId: 'user1',
    type: 'payment_due',
    title: 'Payment Reminder',
    message: 'Your premium payment for MacBook Pro insurance is due in 7 days.',
    isRead: false,
    createdAt: new Date('2024-03-10'),
  },
];

// Generate mock chat messages
export const mockChatMessages: ChatMessage[] = [
  {
    id: 'msg1',
    userId: 'user1',
    isBot: false,
    message: 'How do I file a claim for my iPhone?',
    timestamp: new Date('2024-03-16T10:30:00'),
  },
  {
    id: 'msg2',
    userId: 'user1',
    isBot: true,
    message: 'To file a claim for your iPhone, go to the Claims section in your dashboard and click on "File New Claim". You\'ll need to upload photos of the damage and provide details about the incident.',
    timestamp: new Date('2024-03-16T10:30:15'),
  },
  {
    id: 'msg3',
    userId: 'user1',
    isBot: false,
    message: 'How long will it take to process my claim?',
    timestamp: new Date('2024-03-16T10:31:00'),
  },
  {
    id: 'msg4',
    userId: 'user1',
    isBot: true,
    message: 'Typically, claims are processed within 5-7 business days. You\'ll receive notifications at each stage of the process.',
    timestamp: new Date('2024-03-16T10:31:15'),
  },
];

// Dashboard statistics
export const mockDashboardStats: DashboardStats = {
  activePolicies: 850,
  pendingClaims: 42,
  totalPremium: 12500000,
  newCustomers: 120,
  revenueThisMonth: 2800000,
  claimsPaidThisMonth: 1200000,
};
